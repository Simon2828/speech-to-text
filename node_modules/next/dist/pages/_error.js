import React from 'react';
import PropTypes from 'prop-types';
import HTTPStatus from 'http-status';
import Head from 'next-server/head';
export default class Error extends React.Component {
    static getInitialProps({ res, err }) {
        const statusCode = res ? res.statusCode : (err ? err.statusCode : null);
        return { statusCode };
    }
    render() {
        const { statusCode } = this.props;
        const title = statusCode === 404
            ? 'This page could not be found'
            : HTTPStatus[statusCode] || 'An unexpected error has occurred';
        return React.createElement("div", { style: styles.error },
            React.createElement(Head, null,
                React.createElement("meta", { name: 'viewport', content: 'width=device-width, initial-scale=1.0' }),
                React.createElement("title", null,
                    statusCode,
                    ": ",
                    title)),
            React.createElement("div", null,
                React.createElement("style", { dangerouslySetInnerHTML: { __html: 'body { margin: 0 }' } }),
                statusCode ? React.createElement("h1", { style: styles.h1 }, statusCode) : null,
                React.createElement("div", { style: styles.desc },
                    React.createElement("h2", { style: styles.h2 },
                        title,
                        "."))));
    }
}
if (process.env.NODE_ENV !== 'production') {
    Error.propTypes = {
        statusCode: PropTypes.number
    };
}
const styles = {
    error: {
        color: '#000',
        background: '#fff',
        fontFamily: '-apple-system, BlinkMacSystemFont, Roboto, "Segoe UI", "Fira Sans", Avenir, "Helvetica Neue", "Lucida Grande", sans-serif',
        height: '100vh',
        textAlign: 'center',
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        justifyContent: 'center'
    },
    desc: {
        display: 'inline-block',
        textAlign: 'left',
        lineHeight: '49px',
        height: '49px',
        verticalAlign: 'middle'
    },
    h1: {
        display: 'inline-block',
        borderRight: '1px solid rgba(0, 0, 0,.3)',
        margin: 0,
        marginRight: '20px',
        padding: '10px 23px 10px 0',
        fontSize: '24px',
        fontWeight: 500,
        verticalAlign: 'top'
    },
    h2: {
        fontSize: '14px',
        fontWeight: 'normal',
        lineHeight: 'inherit',
        margin: 0,
        padding: 0
    }
};
